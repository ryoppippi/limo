# yaml-language-server: $schema=https://json.schemastore.org/github-workflow.json

name: Deno Test

on:
  push:
    branches:
      - main
    paths:
      - '**.ts'
      - '.github/workflows/test.yml'
      - 'deno.jsonc'
  pull_request:
    branches:
      - main
    paths:
      - '**.ts'

permissions:
  contents: read

jobs:
  ci:
    runs-on: ubuntu-latest
    steps:
      - name: Setup repo
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

      - name: Setup Deno
        uses: denoland/setup-deno@e95548e56dfa95d4e1a28d6f422fafe75c4c26fb # v2.0.3
        with:
          deno-version: v1.x

      - name: Check
        run: deno task check

      - name: Run linter
        run: deno task lint

  test:
    runs-on: ubuntu-latest
    steps:
      - name: Setup repo
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

      - name: Setup Deno
        uses: denoland/setup-deno@e95548e56dfa95d4e1a28d6f422fafe75c4c26fb # v2.0.3
        with:
          deno-version: v1.x

      - name: Run test with coverage report
        shell: bash
        run: |
          deno task test:coverage
          deno task coverage:lco
          deno task coverage:show >> .coverage/result.txt

      - name: Upload coverage report to Artifact
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: my-artifact
          path: ./.coverage

  coverage-report:
    needs:
      - ci
      - test
    if: false # if you want to upload coverage report to Codecov, set to true
    runs-on: ubuntu-latest
    permissions:
      write-all
    steps:
      - name: Download coverage report from Artifact
        uses: actions/download-artifact@634f93cb2916e3fdff6788551b99b062d0335ce0 # v5.0.0
        with:
          name: my-artifact
          path: ./.coverage

      - name: Upload coverage report to Codecov
        uses: codecov/codecov-action@18283e04ce6e62d37312384ff67231eb8fd56d24 # v5.4.3
        with:
          file: ./.coverage/lcov.info
          fail_ci_if_error: true
          token: ${{ secrets.CODECOV_TOKEN }}
          slug: ${{ github.repository }}

  jsr-publish-dry-run:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
      - uses: denoland/setup-deno@e95548e56dfa95d4e1a28d6f422fafe75c4c26fb # v2.0.3
        with:
          deno-version: ${{ env.DENO_VERSION }}
      - run: deno publish --dry-run

  action-timeline:
    needs: 
      - ci
      - test
      - coverage-report
      - jsr-publish-dry-run
    if: ${{ always() }}
    runs-on: ubuntu-latest
    steps:
    - uses: Kesin11/actions-timeline@a7eaabf426cdae26c3582c3fa674b897170dec8f # v2.2.4
